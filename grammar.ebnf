@@grammar::TMI
@@left_recursion :: True

start = {function} $;

function = funname: identifier args: {parameter_pattern} '=' body: body;

parameter_pattern = @:atom_expression;

body = multiline_body | single_line_body;
single_line_body = expression ';';
expression_statement = expression ';';
statement = expression_statement | function;
multiline_body = '{' @:{ statement }+ '}';

expression = add_expression;

add_expression = left: mul_expression op: ('+' | '-') right: mul_expression | @:mul_expression;
mul_expression = left: app_expression op: ('*' | '/') right: app_expression | @:app_expression;
app_expression = application: (term_expression {term_expression}+) | @:term_expression;
term_expression = @:atom_expression | '(' @:expression ')';
atom_expression = number | identifier;

operator = /[+-\/*<>=]+/;

number = /\d+/;
identifier = /[a-zA-Z]+/;
